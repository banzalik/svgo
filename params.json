{"body":"```\r\no-o o   o o--o o-o\r\n \\   \\ /  |  | | |\r\no-o   o   o--o o-o\r\n             | \r\n          o--o\r\n```\r\n\r\n## SVGO\r\n\r\n**SVG** **O**ptimizer is a Nodejs-based tool for optimizing SVG vector graphics files.\r\n\r\n## Why?\r\n\r\nSVG files, especially exported from various editors, usually contains a lot of redundant and useless information such as editor metadata, comments, hidden elements and other stuff that can be safely removed without affecting SVG rendering result.\r\n\r\n## What it can do\r\n\r\nSVGO has a plugin-based architecture, so almost every optimization is a separate plugin.\r\n\r\nToday we have:\r\n\r\n* [ [>](//github.com/deepsweet/svgo/blob/master/plugins/cleanupAttrs.js) ] cleanup attributes from newlines, trailing and repeating spaces\r\n* [ [>](//github.com/deepsweet/svgo/blob/master/plugins/removeDoctype.js) ] remove doctype declaration\r\n* [ [>](//github.com/deepsweet/svgo/blob/master/plugins/removeXMLProcInst.js) ] remove XML processing instructions\r\n* [ [>](//github.com/deepsweet/svgo/blob/master/plugins/removeComments.js) ] remove comments\r\n* [ [>](//github.com/deepsweet/svgo/blob/master/plugins/removeMetadata.js) ] remove metadata\r\n* [ [>](//github.com/deepsweet/svgo/blob/master/plugins/removeEditorsNSData.js) ] remove editors namespaces, elements and attributes\r\n* [ [>](//github.com/deepsweet/svgo/blob/master/plugins/removeEmptyAttrs.js) ] remove empty attributes\r\n* [ [>](//github.com/deepsweet/svgo/blob/master/plugins/removeDefaultPx.js) ] remove default \"px\" unit\r\n* [ [>](//github.com/deepsweet/svgo/blob/master/plugins/removeHiddenElems.js) ] remove a lot of hidden elements\r\n* [ [>](//github.com/deepsweet/svgo/blob/master/plugins/removeEmptyText.js) ] remove empty Text elements\r\n* [ [>](//github.com/deepsweet/svgo/blob/master/plugins/removeEmptyContainers.js) ] remove empty Container elements\r\n* [ [>](//github.com/deepsweet/svgo/blob/master/plugins/convertStyleToAttrs.js) ] convert styles into attributes\r\n* [ [>](//github.com/deepsweet/svgo/blob/master/plugins/convertColors.js) ] convert colors\r\n* [ [>](//github.com/deepsweet/svgo/blob/master/plugins/moveElemsAttrsToGroup.js) ] move elements attributes to the existing group wrapper\r\n* [ [>](//github.com/deepsweet/svgo/blob/master/plugins/collapseGroups.js) ] collapse groups\r\n\r\nBut it's not only about rude removing, SVG has a strict [specification](http://www.w3.org/TR/SVG/expanded-toc.html) with a lot of opportunities for optimizations, default values, geometry hacking and more.\r\n\r\nHow-to instructions and plugins API docs will coming ASAP.\r\n\r\n\r\n## How to use\r\n\r\n```\r\nnpm install -g svgo\r\n```\r\n\r\n```\r\nUsage:\r\n  svgo [OPTIONS] [ARGS]\r\n\r\n\r\nOptions:\r\n  -h, --help : Help\r\n  -v, --version : Version\r\n  -c CONFIG, --config=CONFIG : Local config\r\n  -d DISABLE, --disable=DISABLE : Disable plugin\r\n  -e ENABLE, --enable=ENABLE : Enable plugin\r\n  -i INPUT, --input=INPUT : Input file (default: stdin)\r\n  -o OUTPUT, --output=OUTPUT : Output file (default: stdout)\r\n```\r\n\r\n```\r\nsvgo -i test.svg -o test.min.svg\r\n```\r\n```\r\ncat test.svg | svgo -d removeDoctype -d removeComment > test.min.svg\r\n```\r\n\r\n## TODO\r\nIt's only the very first public alpha :)\r\n\r\n1. documentation!\r\n2. phantomjs-based server-side SVG rendering \"before vs after\" tests\r\n3. more unit tests\r\n4. more plugins\r\n5. â€¦","name":"SVGO","google":"","tagline":"Nodejs-based tool for optimizing SVG vector graphics files.","note":"Don't delete this file! It's used internally to help with page regeneration."}